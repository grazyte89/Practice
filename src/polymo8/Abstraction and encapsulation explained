 Abstract and encapsulation explained
 
 /* ------------------------------------------------------------------- what is an abstraction ------------------------------------------------------------------------ */
 
 Abstraction is one the concepts of object oriented programming along with inheritance, polymorphism and encapsulation.
 
 Abstraction in theory is basically generalising. When we have a class which is a subclass of an interface, we expect that interface have the bear minimum data, and we
 expect the sub class to inherit and amend them. By making a abstract class or interface, we have basically abstracted.
 
 When look at something from an abstraction view, we are looking a general prospective, when
 
 /* ------------------------------------------------------------------- what is an encapsulation ------------------------------------------------------------------------ */
 
 An encapsulation is basically hiding data. Consider a brace {} a boundary, well encapsulation means everything within its boundary ({}), well in certain situation we are
 given a degree of hiding data. for example a data created within a method is hidden from everything outside the method, as well as anonymous objects. A class isn't the 
 same because we could still access non-private data from outside the class. 
 
 
 http://www.introprogramming.info/english-intro-csharp-book/read-online/chapter-20-object-oriented-programming-principles/#_Toc362296567
 https://www.youtube.com/watch?v=1c9BQYQDnHs