 Inner class
 
 /* --------------------------------------- | what is an inner class | -------------------------------------------- */ 
 
 Inner class is basically a class within a class.
 
 ::Note::
 
 An inner class is a member of the outer class like all its other properties like variables and methods.
 
 ::Note::
 
 The inner class has access to all the instant variables in the outer class, whether they are public or private, 
 meaning 'private int number' in the outer class can be used in the inner class. this applies to methods.
 
 The opposite is quite complex, the outer class does not have same way accessing instant variable like the inner
 class shown below. 
 
 rather you have to create an object of the inner class, and then you could have access to all its private variables
 and methods.
 
 e.g.
 
 public class OutClass {
 	
 	public OutClass()
 	{
 	}
 	
 	public class InClass {
 		
 		public InClass()
 		{
 		}
 	}
 }
  
 e.g. access to all member inner and outer class
 
 public class BankAccount {
 
 	private int prac;
 	
 	private class Money {
 		
 		private int dollar;
 		private int cent;
 		/* instanct variable from the outer class can be used easily by the inner class, but variable from the
 		   inner class cannot be done so easily */
 		.
 		.
 		.
 		
 		public void change()
 		{
 			prac = 0; // accessing variable from outer class
 		}
 		
 		public int getDollarAmount()
 		{
 			return dollar;
 		}
 	}
 	
 	private Money balance;
 	
 	public BankAccount()
 	{
 		balance = new Money(0, 0);
 	}
 	
 	public String getBalance()
 	{
 		return balance.getDollarAmount + ""; 
 		
 		/* at the moment getDollarAmount is defined a public, but if changed it to private, this function will not 
 		   change and can still be accessible by the outer class */
 	}
 	
 	public void closeAccount()
 	{
 		balance.dollar = 0;
 		balance.cent = 0;
 		
 		/* these instant variables are private, so in a normal class they will be impossible to access directly like
 		   this, but here the outer class can access the inner class variables */
 	}
 }
 
 /* --------------------------------------- | what is static inner class | ---------------------------------------- */  
 
 Static inner class is a class that is static, which does NOT have the ability to access the member of the outer class 
 unless they're static variables.
 
 e.g.
 
 public class OuterClass {
 	
 	private int number;
 	
 	private static class InClass {
 		
 		private int change;
 		// You can still have non-static variables in a static class
 		
 		public InClass()
 		{
 			int = 1; // will not be able to access variables, unless number is a static 
 		}
 	}
 }
 
 
 /* --------------------------------------- | what is public inner class | ---------------------------------------- */
 
 If the inner class is marked public, the it can be accessed outside the outer class, like having objects of the 
 inner class.
 
 e.g
 
 BankAccount.Money account = new BabkAccount().new Money(0, 0);
 
 or
 
 BankAccount bank = new BankAccount();
 BackAccount.Money = account = bank.Money(0, 0);